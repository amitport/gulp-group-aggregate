// Generated by CoffeeScript 1.7.1
(function() {
  var File, _;

  _ = require('highland');

  File = require('vinyl');


  /*
  @callback groupBy
  @param {*} obj - gets any object from the stream 
  @returns {string} the group that obj belongs to
   */


  /*
  @callback aggregate
  @param {string} group - the name of the group
  @param {*[]} objects - and array of all the objects of the group
  @returns {File.options} input for creating a new vinyl file (see https://github.com/wearefractal/vinyl)
   */


  /*
  @param {groupBy} 
  @param {aggregate}
   */

  module.exports = function(_arg) {
    var aggregate, group;
    group = _arg.group, aggregate = _arg.aggregate;
    return _.pipeline(_.group(group), _.map(function(grouped) {
      var objects;
      return _((function() {
        var _results;
        _results = [];
        for (group in grouped) {
          objects = grouped[group];
          _results.push(new File(aggregate(group, objects)));
        }
        return _results;
      })());
    }), _.sequence());
  };

}).call(this);
